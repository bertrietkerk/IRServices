<?xml version="1.0"?>
<doc>
    <assembly>
        <name>InsuranceRight.Services.AddressService</name>
    </assembly>
    <members>
        <member name="T:InsuranceRight.Services.AddressService.Controllers.AddressCheckController">
            <summary>
            Controller for validating zipcodes and getting full address details
            </summary>
        </member>
        <member name="M:InsuranceRight.Services.AddressService.Controllers.AddressCheckController.#ctor(InsuranceRight.Services.AddressService.Interfaces.IAddressCheck)">
            <summary>
            Constructor injecting IAddressCheck
            </summary>
            <param name="addressCheck">IAddressCheck</param>
        </member>
        <member name="M:InsuranceRight.Services.AddressService.Controllers.AddressCheckController.ValidateZipcode(InsuranceRight.Services.Shared.Models.ZipCode)">
            <summary>
            Method for validating a zipcode
            </summary>
            <param name="ZipCode">The zipcode to validate</param>
            <returns>ReturnObject including ErrorMessage(s) if the request was invalid</returns>
        </member>
        <member name="M:InsuranceRight.Services.AddressService.Controllers.AddressCheckController.GetFullAddress(InsuranceRight.Services.Shared.Models.Address)">
            <summary>
            Method for getting the full details of an address
            </summary>
            <param name="address">Incomplete Address to fill with details</param>
            <returns>ReturnObject including ErrorMessage(s) if request was invalid, and an object which will include all details if request is valid</returns>
        </member>
        <member name="M:InsuranceRight.Services.AddressService.Repositories.AddressCheckRepository.IsZipCodeValid(System.String)">
            <summary>
            Checks if zipCode is valid, based on _validZipCodes list
            </summary>
            <param name="zipCode">The zipcode to check</param>
            <param name="pattern">An optional custom regex pattern which the zipcode must conform to in order to be checked</param>
            <returns>True: zipcode is valid || False: if invalid or doesn't match regex pattern </returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:InsuranceRight.Services.AddressService.Repositories.AddressCheckRepository.GetFullAddress(System.String,System.String,System.String)" -->
    </members>
</doc>
