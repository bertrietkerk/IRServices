<?xml version="1.0"?>
<doc>
    <assembly>
        <name>InsuranceRight.Services.Feature.Car</name>
    </assembly>
    <members>
        <member name="M:InsuranceRight.Services.Feature.Car.Controllers.CarDiscountPolicyController.GroupDiscounts(System.String)">
            <summary>
            Gets the discount amount(decimal) based on the provided code
            </summary>
            <param name="discountCode">Discount code</param>
            <returns>Amount(decimal) of discount</returns>
        </member>
        <member name="M:InsuranceRight.Services.Feature.Car.Controllers.CarLookupController.GetModels(System.String)">
            <summary>
            Get all possible models of the provided brand car
            </summary>
            <param name="brand">Brand of the car</param>
            <returns>A list of models based on the provided car brand</returns>
        </member>
        <member name="M:InsuranceRight.Services.Feature.Car.Controllers.CarLookupController.GetEditions(InsuranceRight.Services.Models.Car.ViewModels.CarLookupViewModel)">
            <summary>
            Get all editions of the provided brand and model car
            </summary>
            <param name="viewModel">Model containing a brand(string) and model(string)</param>
            <returns>A list of editions based on the provided car brand and model</returns>
        </member>
        <member name="M:InsuranceRight.Services.Feature.Car.Controllers.CarLookupController.GetWeight(InsuranceRight.Services.Models.Car.ViewModels.CarLookupViewModel)">
            <summary>
            Get the weight of the provided car 
            </summary>
            <param name="viewModel">Model containing a brand(string), model(string) and edition(string) of the car to get the weight for</param>
            <returns>The weight(decimal) of the provided car</returns>
        </member>
        <member name="M:InsuranceRight.Services.Feature.Car.Controllers.CarLookupController.GetCatalogValue(InsuranceRight.Services.Models.Car.ViewModels.CarLookupViewModel)">
            <summary>
            Get the catalog value of the provided car 
            </summary>
            <param name="viewModel">Model containing a brand(string), model(string) and edition(string) of the car to get the catalog value for</param>
            <returns>The catalog value(decimal) of the provided car</returns>
        </member>
        <member name="M:InsuranceRight.Services.Feature.Car.Controllers.CarPolicyDocumentController.GetDocuments(InsuranceRight.Services.Models.Car.ViewModels.CarViewModel)">
            <summary>
            Get the policy documents for the chosen insurance
            </summary>
            <param name="viewModel">CarViewModel</param>
            <returns></returns>
        </member>
        <member name="M:InsuranceRight.Services.Feature.Car.Controllers.CarPremiumPolicyController.GetVariants_Old(InsuranceRight.Services.Models.Car.ViewModels.CarViewModel)">
            <summary>
            Get Product Variants
            </summary>
            <param name="viewModel">Viewmodel containg licenseplate, driver-age, -damagefreeyears and -residenceaddress zipcode</param>
            <returns></returns>
        </member>
        <member name="M:InsuranceRight.Services.Feature.Car.Controllers.CarPremiumPolicyController.GetVariants(InsuranceRight.Services.Models.Car.ViewModels.CarViewModel)">
            <summary>
            Get Package Variants (MTPL || MTPL Limited Casco || MTPL All Risk)
            </summary>
            <param name="viewModel">Viewmodel containg licenseplate, driver-age, -damagefreeyears, -residenceaddress zipcode and -kilometersPerYear</param>
            <returns></returns>
        </member>
        <member name="M:InsuranceRight.Services.Feature.Car.Controllers.CarPremiumPolicyController.GetCoverages(InsuranceRight.Services.Models.Car.ViewModels.CarViewModel)">
            <summary>
            Get Coverages
            </summary>
            <param name="viewModel">Viewmodel containg licenseplate, driver-age, -damagefreeyears and -residenceaddress zipcode</param>
            <returns></returns>
        </member>
        <member name="M:InsuranceRight.Services.Feature.Car.Controllers.CarPremiumPolicyController.PaymentFrequencyDiscount(InsuranceRight.Services.Models.Car.ViewModels.CarViewModel)">
            <summary>
            Get the discount based on the payment frequency
            </summary>
            <param name="viewModel">Viewmodel containing the payment frequency</param>
            <returns></returns>
        </member>
        <member name="M:InsuranceRight.Services.Feature.Car.Controllers.LicensePlateLookupController.GetCarDetails(InsuranceRight.Services.Models.Car.LicensePlate)">
            <summary>
            Returns the Car details of the car corresponding to the give license-plate
            </summary>
            <param name="licensePlate">The license-plate from the car to get the details from</param>
            <returns>CarObject with car details</returns>
        </member>
        <member name="M:InsuranceRight.Services.Feature.Car.Services.Impl.DefaultCarLookup.GetModels(System.String)">
            <summary>
            Get a list of all models of the given brand car
            </summary>
        </member>
        <member name="M:InsuranceRight.Services.Feature.Car.Services.Impl.DefaultPremiumCalculator.CalculateMtplPremium(System.Int32,System.String,System.String,System.String,InsuranceRight.Services.Models.Enums.KilometersPerYear)">
            <summary>
            Calculates the premium for the - MTPL - package based on the given parameters
            </summary>
            <param name="carAge">Age of the car in years</param> 
            <param name="ageRange">Age range of the applicant</param>
            <param name="claimFreeYear">Amount of years without claim</param>
            <param name="zipCode">Zipcode of the residence-address of the applicant</param>
            <param name="kmsPerYear">Estimate of the amount of km's the applicant will drive per year</param>
            <returns>The Product variant including calculated premium</returns>
        </member>
        <member name="M:InsuranceRight.Services.Feature.Car.Services.Impl.DefaultPremiumCalculator.CalculateMtplLimitedCascoPremium(System.Int32,InsuranceRight.Services.Models.Car.CarPrice,System.String,System.String,System.String,InsuranceRight.Services.Models.Enums.KilometersPerYear)">
            <summary>
             Calculates the premium for the - MTPL Limited Casco - package based on the given parameters
            </summary>
            <param name="carAge">Age of the car in years</param> 
            <param name="carPrice">Price of the car including CatalogPrice and CurrentPrice</param>
            <param name="ageRange">Age range of the applicant</param>
            <param name="claimFreeYear">Amount of years without claim</param>
            <param name="zipCode">Zipcode of the residence-address of the applicant</param>
            <param name="kmsPerYear">Estimate of the amount of km's the applicant will drive per year</param>
            <returns>The Product variant including calculated premium</returns>
        </member>
        <member name="M:InsuranceRight.Services.Feature.Car.Services.Impl.DefaultPremiumCalculator.CalculateMtplAllRiskPremium(System.Int32,InsuranceRight.Services.Models.Car.CarPrice,System.String,System.String,System.String,InsuranceRight.Services.Models.Enums.KilometersPerYear)">
            <summary>
            Calculates the premium for the - MTPL All Risk - package based on the given parameters
            </summary>
            <param name="carAge">Age of the car in years</param>
            <param name="carPrice">Price of the car including CatalogPrice and CurrentPrice</param>
            <param name="ageRange">Age range of the applicant</param>
            <param name="claimFreeYear">Amount of years without claim</param>
            <param name="zipCode">Zipcode of the residence-address of the applicant</param>
            <param name="kmsPerYear">Estimate of the amount of km's the applicant will drive per year</param>
            <returns>The Product variant including calculated premium</returns>
        </member>
    </members>
</doc>
